/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/models/drone.glb 
*/

import React, { useRef } from "react";
import { useGLTF, PerspectiveCamera } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function Drone(props) {
  const { nodes, materials } = useGLTF("./public/models/drone.glb");
  const ref = useRef();

  useFrame((state, delta) => {
    state.camera.lookAt(ref.current.position);
  });
  return (
    <group {...props} dispose={null}>
      {/* Camera looking at the object */}
      <PerspectiveCamera ref={ref} makeDefault position={[-10, 0, 5]} />
      <mesh
        geometry={nodes.body.geometry}
        material={materials.lambert1}
        position={[0, 0.016, 0.02]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.275}
      />
      <mesh
        geometry={nodes.main_wing.geometry}
        material={materials.lambert1}
        position={[0, 0.016, 0.02]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[0.114, 0.275, 0.275]}
      />
    </group>
  );
}

useGLTF.preload("./public/models/drone.glb");
